{"version":3,"sources":["components/Album/Photolist.js","components/Album/Albums.js","components/Dashboard/Dashboard.js","components/Dashboard/Topmenu.js","components/Login/login.js","components/Album/methods.js","components/Album/CreateAlbum.js","components/Upload/methods.js","components/Upload/UploadForm.js","components/Album/AlbumDetails.js","App.js","useToken.js","reportWebVitals.js","index.js"],"names":["PhotoList","state","imagetags","axios","get","config","API_Endpoint","then","res","tmp","x","data","imagetag","push","setState","className","this","props","classes","root","GridList","gridList","cols","map","item","index","k","GridListTile","src","React","Component","withStyles","theme","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","icon","color","withTheme","Albums","handleClick","parameter","event","console","log","history","pathname","albumid","text","albumnames","Container","cardGrid","maxWidth","Grid","container","spacing","album","url","xs","sm","md","Card","card","CardMedia","cardMedia","image","title","CardContent","cardContent","Typography","gutterBottom","variant","component","displayname","CardActions","Button","size","onClick","e","withRouter","paddingTop","paddingBottom","height","flexDirection","flexGrow","Dashboard","Paper","useStyles","makeStyles","menuButton","marginRight","Topmenu","useState","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","Link","to","aria-controls","aria-haspopup","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","loginUser","credentials","a","fetch","method","headers","body","JSON","stringify","json","backgroundImage","backgroundRepeat","type","grey","backgroundSize","backgroundPosition","margin","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","setToken","username","setUserName","password","setPassword","handleSubmit","preventDefault","token","CssBaseline","elevation","square","Avatar","onSubmit","noValidate","TextField","required","fullWidth","label","name","autoComplete","autoFocus","onChange","target","value","FormControlLabel","control","Checkbox","href","createDicrectory","discription","result","post","catch","error","clear","CreateAlbum","status","handleCapture","fileReader","FileReader","readAsDataURL","files","filename","onloadend","imagePreviewUrl","loadfilename","time","buttonSubmit","padding","fileInput","marginBottom","uploadtos3","file","formData","FormData","append","inserttoMongoDB","albumname","place","s3key","tags","response","UploadForm","dbresult","accept","input","htmlFor","imagecanvas","maxHeight","AlbumDetails","imageData","rurl","location","justify","tile","img","alt","App","tokenString","localStorage","getItem","userToken","parse","getToken","setItem","useToken","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a92615b.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport config from '../../config.json';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nconst Styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    // width: 800,\n    // height: 450,\n    flexWrap: 'nowrap',\n    // transform: 'translateZ(0)'\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n});\n\n\nclass PhotoList extends React.Component {\n  state = {\n    imagetags: []\n  }\n\n  componentDidMount() {\n    axios.get(`${config.API_Endpoint}/mys3/`)\n      .then(res => {\n        let tmp = []\n        for (let x in res.data){\n          const imagetag = \"data:image/jpeg;base64,\" + res.data[x]\n          tmp.push(imagetag)\n        }\n        this.setState({ imagetags: tmp });\n        \n      })\n  }\n\n  render() {\n\n    return (\n      <div className={this.props.classes.root}>\n        <GridList className={this.props.classes.gridList} cols={4}>\n          {this.state.imagetags.map((item,index)=>{\n            let k = \"test\" + index\n            return <GridListTile key={k}>\n                      <img src={item} />\n                  </GridListTile>\n          })}\n          \n        </GridList>\n\n      </div>\n    )\n  }\n}\n\nexport default withStyles(Styles, { withTheme: true })(PhotoList);","import React from 'react';\nimport axios from 'axios';\nimport config from '../../config.json';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\n\nconst Styles = theme => ({\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    }\n});\n\n\nclass Albums extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          text: '',\n          albumnames: []\n        }\n    }\n\n    handleClick = (parameter, event) => {\n        console.log('this is:', this);\n        //this.props.history.push('/albumdetails')\n        this.props.history.push({\n            pathname: '/albumdetails',\n            state: {\n                albumid: parameter\n            } \n        })\n    }\n\n    // Call to DB first\n    componentDidMount() {\n        axios.get(`${config.API_Endpoint}/albums/`)\n          .then(res => {\n            \n            this.setState({ albumnames: res.data });\n            \n        })\n    }\n\n    render() {\n        return (\n            <Container className={this.props.classes.cardGrid} maxWidth=\"md\">\n            {/* End hero unit */}\n            <Grid container spacing={4}>\n                {this.state.albumnames.map((album) => {\n\n                    //let url = `${config.API_Endpoint}/getRandomImage/` + album.albumid\n                    let url = `${config.API_Endpoint}/pictures/` + album.albumid + '/random'\n                    \n                    return <Grid item key={album.albumid} xs={12} sm={6} md={4}>\n                            <Card className={this.props.classes.card}>\n                            <CardMedia\n                                className={this.props.classes.cardMedia}\n                                image={url}\n                                title=\"Image title\"\n                            />\n                            <CardContent className={this.props.classes.cardContent}>\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                {album.displayname}\n                                </Typography>\n                                <Typography>\n                                This is a media card. You can use this section to describe the content.\n                                </Typography>\n                            </CardContent>\n                            <CardActions>\n                                <Button size=\"small\" color=\"primary\" onClick={(e) => this.handleClick(album.albumid, e)}>\n                                View\n                                </Button>\n                            </CardActions>\n                            </Card>\n                        </Grid>\n                    }\n            )}\n          </Grid>\n        </Container>\n        )\n    }\n}\n\n//export default withStyles(Styles, { withTheme: true })(Albums);\nexport default withRouter(withStyles(Styles, { withTheme: true })(Albums));","import React from 'react';\n\nimport PhotoList from '../Album/Photolist';\nimport Albums from '../Album/Albums';\nimport { Paper } from '@material-ui/core';\n\nexport default function Dashboard() {\n  return(\n    <div>\n      <Paper>\n        {/* <PhotoList /> */}\n        <Albums />\n      </Paper>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function Topmenu() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" component={Link} to=\"/\">\n            <HomeIcon />\n          </IconButton>  \n          <Typography variant=\"h6\" className={classes.title}>\n            MyPhotos\n          </Typography>\n\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" component={Link} to=\"/createalbum\">\n            <AddIcon />\n          </IconButton>\n\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React,{ useState } from 'react';\nimport config from '../../config.json';\n\nimport PropTypes from 'prop-types';\nimport './Login.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nasync function loginUser(credentials) {\n    console.log(credentials);\n    return fetch(`${config.API_Endpoint}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    }).then(data => data.json())\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login({ setToken }) {\n\n  const classes = useStyles();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n      e.preventDefault();\n      const token = await loginUser({\n        username,\n        password\n      });\n      setToken(token);\n  }\n\n  return(\n    \n    <Grid container component=\"main\" className={classes.root}>\n    <CssBaseline />\n    <Grid item xs={false} sm={4} md={7} className={classes.image} />\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOpenIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form onSubmit={handleSubmit} className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={e => setUserName(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={e => setPassword(e.target.value)}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Grid>\n  </Grid>\n  )\n}\n\nLogin.propTypes = {\n    setToken: PropTypes.func.isRequired\n}","import axios from 'axios';\nimport config from '../../config.json';\n\nexport async function createDicrectory(albumid, displayname, discription) {\n    \n    var data = {};\n    data['albumid'] = albumid;\n    data['displayname'] = displayname;\n    data['discription'] = discription;\n\n    var result = ''\n    \n    await axios.post(`${config.API_Endpoint}/albums/`,data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n        result = res;\n        console.log(res);\n        \n    }).catch((error) => {\n        console.log(\"Error happens\");\n        result = error;\n    })\n\n    return result\n    \n}\n\nexport async function inserttoMongoDB(albumname, filename, place, s3key, tags) {\n    // Call db insert API\n\n    const data = {\n        album: albumname,\n        filename: filename,\n        place: place,\n        s3key: s3key,\n        tags: tags\n    }\n\n    await axios.post(`${config.API_Endpoint}/pictures/`, data).then(function (response) {\n        console.log(\"Post request\");\n        console.log(response);\n    })\n    console.log(\"Insert images to Mongo DB\");\n    return \"ok\"\n}","import React from 'react';\n\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\n// WithRouter to us Redicrect. \n\nimport { createDicrectory } from './methods';\n\n\nconst Styles = theme => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    fileInput: {\n        width: '97%',\n        margin: '10px 0',\n    },\n    buttonSubmit: {\n        marginBottom: 10,\n    }\n});\n\nconst clear = () => {\n    console.log(\"sss\")\n};\n\nclass CreateAlbum extends React.Component{\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            albumid: '',\n            displayname: '',\n            discription: '',\n            time: ''\n        }\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        \n        // Upload file to S3\n        createDicrectory( this.state.albumid, this.state.displayname, this.state.discription).then(result => {\n            if(result.status == \"200\") {\n                console.log(\"Successed\");\n                console.log(result);\n                console.log(\"the albumid in client\");\n                console.log(this.state.albumid);\n                this.props.history.push({\n                    pathname: '/albumdetails',\n                    state: {\n                        albumid: this.state.albumid\n                    } \n                })\n            }\n\n        });\n\n    }\n\n    handleCapture = ({ target }) => {\n        const fileReader = new FileReader();\n        //const name = target.accept.includes('image') ? 'images' : 'videos';\n\n        fileReader.readAsDataURL(target.files[0]);\n        var filename = target.files[0].name;\n        \n        fileReader.onloadend = (event) => {\n  \n            this.setState({\n                imagePreviewUrl: fileReader.result,\n                loadfilename: filename\n            });\n\n        };\n    }; \n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n\n            <Paper>\n                <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={this.handleSubmit}>\n                    <Typography variant=\"h6\">{ 'Create a new Album' }</Typography>\n                    <TextField name=\"albumid\" variant=\"outlined\" label=\"albumid\" fullWidth value={this.state.albumid} onChange={(e) => this.setState({ albumid: e.target.value})} />\n                    <TextField name=\"displayname\" variant=\"outlined\" label=\"displayname\" fullWidth value={this.state.displayname} onChange={(e) => this.setState({ displayname: e.target.value})} />\n                    <TextField name=\"discription\" variant=\"outlined\" label=\"discription\" fullWidth value={this.state.discription} onChange={(e) => this.setState({ discription: e.target.value})} />\n                    <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                    <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n                </form>\n            </Paper>\n        )\n    }\n\n}\n\nexport default withRouter(withStyles(Styles, { withTheme: true })(CreateAlbum));","import axios from 'axios';\nimport config from '../../config.json';\n\nexport async function uploadtos3(file, filename, albumid) {\n    var formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"filename\", filename);\n\n    var result = ''\n    \n    await axios.post(`${config.API_Endpoint}/upload/${albumid}`,formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n        //'enctype': 'multipart/form-data'\n      }\n    }).then(res => {\n        result = res;\n    }).catch((error) => {\n        console.log(\"Error happens\");\n        result = error;\n    })\n\n    return result\n    \n}\n\nexport async function inserttoMongoDB(albumname, filename, place, s3key, tags) {\n    // Call db insert API\n\n    const data = {\n        album: albumname,\n        filename: filename,\n        place: place,\n        s3key: s3key,\n        tags: tags\n    }\n\n    await axios.post(`${config.API_Endpoint}/pictures/`, data).then(function (response) {\n        console.log(\"Post request\");\n        console.log(response);\n    })\n    console.log(\"Insert images to Mongo DB\");\n    return \"ok\"\n}","import React, { Component } from 'react';\n\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { uploadtos3, inserttoMongoDB } from './methods';\n\nconst styles = (theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    fileInput: {\n        width: '97%',\n        margin: '10px 0',\n    },\n    buttonSubmit: {\n        marginBottom: 10,\n    },\n    input: {\n        display: 'none'\n    },\n    imagecanvas: {\n        width:'auto',\n        height: 'auto',\n        maxWidth: '100%',\n        maxHeight: '100%'\n    }\n});\n\nconst clear = () => {\n    console.log(\"sss\")\n};\n\nclass UploadForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            filename: '',\n            albumname: '',\n            place: '',\n            time: '',\n            tags: ''\n        }\n    }\n\n    handleSubmit = async e => {\n        e.preventDefault()\n        \n        // Upload file to S3\n        uploadtos3(this.state.imagePreviewUrl, this.state.loadfilename, this.props.albumid).then(result => {\n            if(result.status == \"200\") {\n                console.log(\"Successed\");\n                console.log(result);\n                inserttoMongoDB(\n                    this.props.albumid,\n                    this.state.filename,\n                    this.state.place,\n                    this.state.loadfilename,\n                    this.state.tags\n                ).then( dbresult => {\n                    console.log(dbresult);\n                })\n\n            }\n\n        });\n\n    }\n\n    handleCapture = ({ target }) => {\n        const fileReader = new FileReader();\n        //const name = target.accept.includes('image') ? 'images' : 'videos';\n\n        fileReader.readAsDataURL(target.files[0]);\n        var filename = target.files[0].name;\n        \n        fileReader.onloadend = (event) => {\n  \n            this.setState({\n                imagePreviewUrl: fileReader.result,\n                loadfilename: filename\n            });\n\n        };\n    };    \n\n    render() {\n        const { classes } = this.props;\n\n        return (\n\n            <Paper className={classes.paper}>\n                <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={this.handleSubmit}>\n                    <Typography variant=\"h6\">{ 'Add Photo to ' + this.props.albumid }</Typography>\n                    <TextField name=\"filename\" variant=\"outlined\" label=\"filename\" fullWidth value={this.state.filename} onChange={(e) => this.setState({ filename: e.target.value})} />\n                    <TextField name=\"place\" variant=\"outlined\" label=\"place\" fullWidth value={this.state.place} onChange={(e) => this.setState({ place: e.target.value})} />\n                    <TextField name=\"tags\" variant=\"outlined\" label=\"tags\" fullWidth value={this.state.tags} onChange={(e) => this.setState({ tags: e.target.value})} />\n                    <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        id=\"icon-button-photo\"\n                        onChange={this.handleCapture}\n                        type=\"file\"\n                        name=\"formtest\"\n                    />\n                    <Button variant=\"contained\" component=\"label\" htmlFor=\"icon-button-photo\">Upload File</Button>\n                    <div>\n                        <img className={classes.imagecanvas} src={this.state.imagePreviewUrl} />\n                    </div>\n\n                    {/* <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div> */}\n                    <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                    <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n                </form>\n            </Paper>\n        )\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UploadForm);","import React from 'react';\nimport axios from 'axios';\nimport config from '../../config.json';\n\nimport UploadForm from '../Upload/UploadForm';\n\nimport { withRouter } from 'react-router-dom';\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\n\n\nconst Styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: \"100%\",\n        height: 600,\n    },\n});\n\nclass AlbumDetails extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n          imageData: [],\n          albumnames: []\n        }\n    }\n\n    componentDidMount() {\n        //let rurl = `${config.API_Endpoint}/getalbums/` + this.props.location.state.albumid\n        let rurl = `${config.API_Endpoint}/pictures/` + this.props.location.state.albumid\n        \n        axios.get(rurl)\n          .then(res => {\n\n            this.setState({ imageData: res.data });\n            \n        })\n    }\n    \n    render() {\n        \n        console.log(this.props.location.state.albumid)\n\n        return (\n            <div> \n                <Paper>\n                    <Grid container justify=\"center\" alignItems=\"stretch\" spacing={3}>\n                        <Grid item xs={12} sm={4}>\n                            <UploadForm albumid={this.props.location.state.albumid} />\n                        </Grid>\n                        <Grid item xs={12} sm={7}>\n                            <GridList className={this.props.classes.gridList} cols={4} spacing={5}>\n                                {this.state.imageData.map((tile) => (\n                                    <GridListTile key={tile.img} cols={tile.cols || 1}>\n                                        <img src={tile.img} alt={tile.title} />\n                                    </GridListTile>\n                                ))}\n                            </GridList>\n                        </Grid>\n                        \n                    </Grid>\n                </Paper>\n                \n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(withStyles(Styles, { withTheme: true })(AlbumDetails));","import React from 'react';\nimport './App.css';\n\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Tommenu from './components/Dashboard/Topmenu';\nimport Login from './components/Login/login';\nimport CreateAlbum from './components/Album/CreateAlbum';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport useToken from './useToken';\nimport AlbumDetails from './components/Album/AlbumDetails';\n\nimport { Container } from '@material-ui/core';\n\n\nfunction App() {\n\n  const { token, setToken } = useToken();\n\n  if(!token) {\n    return <Login setToken={setToken} />\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n\n      <BrowserRouter>\n        <Tommenu />\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard />\n          </Route>\n          <Route exact path=\"/createalbum\">\n            <CreateAlbum />\n          </Route>\n          <Route exact path=\"/albumdetails\">\n            <AlbumDetails />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState } from 'react';\n\nexport default function useToken() {\n\n    const getToken = () => {\n        const tokenString = localStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        return userToken?.token\n    };\n\n    const [token, setToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        localStorage.setItem('token', JSON.stringify(userToken));\n        setToken(userToken.token);\n    };\n\n    return {\n        setToken: saveToken,\n        token\n    }\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}